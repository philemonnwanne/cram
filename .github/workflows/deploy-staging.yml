# .github/workflows/deploy-staging.yaml
name: 🧙🏾‍♂️ Deploy to Environment
run-name: 🪼 creation by ${{ github.actor }}
on:
  workflow_call:

jobs:
  get-artifact:
    # environment: staging
    name: Download Build Files
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: 📥 Download Artifact from `Build` Workflow Run
        id: download-artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: build.yml
          workflow_conclusion: success
          branch: main
          name: react-app
          path: ${{ github.workspace }}/frontend/dist
          if_no_artifact_found: fail

      # - name: 📥 Download artifact from build job
      #   uses: actions/download-artifact@v3
      #   with:
      #     name: react-app

      - name: Unzip Artifact for Deployment
        run: unzip release.zip

      - name: Move Artifact to Frontend Directory
        run: |
          mkdir ${GITHUB_WORKSPACE}/frontend/dist
          mv release/* ${GITHUB_WORKSPACE}/frontend/dist

  deploy-staging:
    needs: get-artifact
    environment: staging
      # url: ${{ steps.step_id.outputs.url_output }}
    name: 🐧 Deploy to staging
    defaults:
      run:
        working-directory: "./terraform"
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    env:
      TF_IN_AUTOMATION: true
      TF_INPUT: 0
      TF_STATE: ${{ secrets.TF_STATE }} # S3 bucket for the Terraform state
    steps:
      - run: echo "👷🏾‍♂️ Target environment is staging"

      - name: 🛒 Checkout Repo
        uses: actions/checkout@v3

      - name: 🦢 Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.ACTIONS_ROLE_ARN }}
          aws-region: ${{ vars.AWS_DEFAULT_REGION }}

      - name: 🚦 Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: true

      # - name: 📥 Download TF Plan Artifact
      - name: 📥 Download TF Plan Artifact from `Build` Workflow Run
        id: download-artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: build.yml
          workflow_conclusion: success
          branch: main
          name: tf_plan
          path: ${{ github.workspace }}/terraform
          if_no_artifact_found: fail

        # uses: actions/download-artifact@v3
        # with:
        #   name: tf_plan
        #   path: ${{ github.workspace }}/terraform

      - name: 🍀 Terraform Init
        id: init
        run: terraform init -backend-config="bucket=$TF_STATE"

      - name: 🧙🏾‍♂️ Terraform Apply Staging
        run: |
          # terraform apply "tf_plan"
          ls -R
          echo "Deploy to staging successfull 🎉"

  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: get-artifact
    steps:
      - name: 📥 Download all Artifacts from `Build` Workflow Run
        id: download-artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: build.yml
          workflow_conclusion: success
          branch: main
          if_no_artifact_found: fail

      - name: 📥 Download all Artifacts
        uses: actions/download-artifact@v3 # download all artifacts

      - name: Display structure of downloaded files
        run: ls -R

      # - name: Zip Artifact # we can't attach a folder to a release
      #   run: |
      #     zip -r 

      - name: 🏷️ Create Release Tag
        id: create-release-tag
        run: |
          echo "tag_name=v$(printf %d.0.0 $GITHUB_RUN_NUMBER)" >> $GITHUB_OUTPUT

      - name: ➛ Create Draft Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.create-release-tag.outputs.tag_name }}
          name: ${{ steps.create-release-tag.outputs.tag_name }}
          body: |
            ## ℹ️ Info
            Commit ${{ github.sha }} was deployed to `staging`. [See code diff](${{ github.event.compare }}).

            ✨ It was initialized by [${{ github.event.sender.login }}](${{ github.event.sender.html_url }}).

            ## 👨🏾‍💻 How to Promote
            In order to promote this to Production, edit the draft and press **"Publish release"**. ✅
          draft: true
          files: cdk.out.zip
