name: Create AZURE App 🕋
run-name: Written by ${{ github.actor }} 🤖
on:
  workflow_dispatch:
  # push:
env:
  TF_IN_AUTOMATION: true
  TF_LOG: trace
  TF_INPUT: 0
  mascot: Mona
  AWS_REGION: ${{ vars.AWS_DEFAULT_REGION }}
  ACTIONS_ROLE_ARN: ${{ secrets.ACTIONS_ROLE_ARN }}

defaults:
  run:
    working-directory: "./azure"

permissions:
  id-token: write # required for requesting the JWT
  contents: read # required for actions/checkout

jobs:
  terraform_job:
    name: 🐢 Terraform Infrastructure MOC 🐧
    runs-on: ubuntu-latest
    env:
      mascot: Octocat
    steps:
      - name: Checkout 🛒
        uses: actions/checkout@v3

      - name: Configure AWS Credentials 🦢
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ env.ACTIONS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform 🚦
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: true

      - name: Terraform Format 🔥
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init & Validate 🍀🍁
        id: init-validate
        run: terraform init && terraform validate -no-color
        # run: terraform init -backend-config="bucket=$BUCKET_TF_STATE"

      - name: Terraform Plan 👨🏾‍💻
        id: plan
        run: terraform plan -no-color
        continue-on-error: true

      - run: echo 'Hi ${{ env.mascot }} 1' # Hi Octocat
      # - run: echo ${{ steps.plan.outputs.stdout }}
      # - run: echo ${{ steps.plan.outputs.stderr }}
      # - run: echo ${{ steps.plan.outputs.exitcode }}

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
 
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false

      # - name: Check nginx
      #   run: |
      #     systemctl status nginx
      #     echo " $awsRegion "
      #     pwd && ls -l

  # clean-up:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - name: Configure AWS Credentials
  #       uses: aws-actions/configure-aws-credentials@v3
  #       with:
  #         role-to-assume: $actions-role
  #         aws-region: $aws-region

  #     - name: Setup Terraform
  #     uses: hashicorp/setup-terraform@v2
  #     with:
  #       terraform_wrapper: true

  #     - name: Terraform fmt
  #       id: fmt
  #       run: terraform fmt -check
  #       continue-on-error: true

  # windows_job:
  #   runs-on: windows-latest
  #   env:
  #     mascot: Tux
  #   steps:
  #     - run: echo 'Hi ${{ env.mascot }} 1' # Hi Tux
  #     - run: echo 'Hi ${{ env.mascot }} 2' # Hi Tux
  #     - run: echo 'Hi ${{ env.mascot }} 3' # Hi Tux
