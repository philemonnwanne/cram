name: ⛅️ Create AZURE App 🕋
run-name: Written by ${{ github.actor }} 🤖
on:
  workflow_dispatch:
  workflow_call:
  # push:
env:
  TF_IN_AUTOMATION: true
  TF_LOG: trace
  TF_INPUT: 0
  mascot: Mona
  AWS_REGION: ${{ vars.AWS_DEFAULT_REGION }}
  ACTIONS_ROLE_ARN: ${{ secrets.ACTIONS_ROLE_ARN }}

defaults:
  run:
    working-directory: "./azure"

# permissions:
#   id-token: write # required for requesting the JWT
#   contents: read # required for actions/checkout

jobs:
  terraform_job:
    name: 🐢 Terraform Infrastructure MOC 🐧
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        # environment: [dev, stage, prod]
    runs-on: ${{ matrix.os }}
    # environment: ${{ matrix.environment }}
    env:
      mascot: Octocat
    steps:
      - name: Checkout 🛒
        uses: actions/checkout@v3

      - name: Configure AWS Credentials 🦢
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.ACTIONS_ROLE_ARN }}
          aws-region: ${{ vars.AWS_DEFAULT_REGION }}

      - name: Setup Terraform 🚦
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: true

      - name: Export Terraform Runner Variables 🏃🏾
        run: |
          export ${{ env.TF_IN_AUTOMATION }} \
            && TF_LOG=trace \
            && TF_INPUT=0

      - name: Terraform Format ✅
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: 🍀 Terraform Init & Validate 🍁
        id: init-validate
        run: terraform init && terraform validate -no-color
        # run: terraform init -backend-config="bucket=$BUCKET_TF_STATE"

      - name: Terraform Plan 👨🏾‍💻
        id: plan
        run: terraform plan -no-color
        continue-on-error: true

      - run: echo 'Hi ${{ env.mascot }} 1' # Hi Octocat
      - run: echo ${{ steps.plan.outputs.exitcode }}

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        if: ${{ success() }} && github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false

      # - name: Check nginx
      #   run: |
      #     systemctl status nginx
      #     echo " $awsRegion "
      #     pwd && ls -l
