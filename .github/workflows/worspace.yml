# export TF_WORKSPACE="$(terraform workspace show)"
run-name: creation by ${{ github.actor }} 🪼
on:
  workflow_dispatch:
  push:

jobs:
  space0:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Terraform 🚦
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: true

      - name: Terraform Workspace 🪐 # create and switch to new workspace
        id: workspace
        run: |
          terraform workspace new stage
          export tff_workspace="$(terraform workspace show)" >> $GITHUB_ENV

      - name: Use the value
        id: step_two
        run: |
          env
          echo "The selected workspace is $tff_workspace"

  space1:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Terraform 🚦
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: true

      - name: Terraform Workspace 🪐 # create and switch to new workspace
        id: workspace
        # run: |
        #   terraform workspace new stage
        #   echo "tff_workspace=$(terraform workspace show)" >> $GITHUB_ENV
        run: |
          export LEFT_PAD_NUM=1
          echo "tag_name=v$(printf %d.0.0 $LEFT_PAD_NUM)" >> $GITHUB_OUTPUT
        
      - name: ➛ Create Draft Release
        if: ${{ steps.workspace.outputs.tag_name == 'name' }}
        run: ls -R

      # - name: Use the value
      #   id: step_two
      #   run: |
      #     env
      #     printf '%s\n' "$tff_workspace"
      #     echo "The selected workspace is $tff_workspace"

  space2:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Terraform 🚦
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: true

      - name: Terraform Workspace 🌍 # create and switch to new workspace
        id: workspace
        run: |
          terraform workspace new stage
          echo "tff_workspace=$(terraform workspace show)" >> $GITHUB_OUTPUT
        
      - name: Get workspace
        env:
          tff_workspace: ${{ steps.workspace.outputs.tff_workspace }}
        run: |
          env
          echo "The selected workspace is $tff_workspace"

  space3:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Terraform 🚦
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: true

      - name: Terraform Workspace 🪐 # create and switch to new workspace
        id: workspace
        run: |
          terraform workspace new stage
          export tff_workspace="$(terraform workspace show)" >> $GITHUB_OUTPUT

      - name: Get workspace
        env:
          tff_workspace: ${{ steps.workspace.outputs.tff_workspace }}
        run: |
          env
          echo "The selected workspace is $tff_workspace"