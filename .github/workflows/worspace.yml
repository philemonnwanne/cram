# export TF_WORKSPACE="$(terraform workspace show)"
run-name: creation by ${{ github.actor }} 🪼
on:
  workflow_dispatch:
  push:

jobs:
  space0:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Terraform 🚦
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false

      - name: Terraform Workspace 🪐 # create and switch to new workspace
        id: workspace
        run: |
          terraform workspace new stage
          echo "tff_workspace=$(terraform workspace show)" >> $GITHUB_ENV

      - name: Use the value
        id: step_two
        run: |
          printf '%s\n' "$tff_workspace"
          env
          echo "The selected workspace is $tff_workspace"

  space1:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Terraform 🚦
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false

      # - name: Terraform Workspace 🪐 # create and switch to new workspace
      #   id: workspace
        # run: |
        #   terraform workspace new stage
        #   echo "tff_workspace=$(terraform workspace show)" >> $GITHUB_ENV

        
      - name: Set the value
        id: step_one
        run: |
          echo "action_state=yellow" >> "$GITHUB_ENV"

      - name: Use the value
        id: step_two
        run: |
          printf '%s\n' "$action_state" # This will output 'yellow'
          

      # - name: Use the value
      #   id: step_two
      #   run: |
      #     env
      #     printf '%s\n' "$tff_workspace"
      #     echo "The selected workspace is $tff_workspace"

  space2:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Terraform 🚦
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false

      - name: Set color
        id: random-color-generator
        run: echo "SELECTED_COLOR=green" >> "$GITHUB_OUTPUT"
      - name: Get color
        env:
          SELECTED_COLOR: ${{ steps.random-color-generator.outputs.SELECTED_COLOR }}
        run: echo "The selected color is $SELECTED_COLOR"
  
      - name: Terraform Workspace 🌍 # create and switch to new workspace
        id: workspace
        run: |
          terraform workspace new stage
          echo "tff_workspacet=$(terraform workspace show)" >> $GITHUB_OUTPUT
        
      - name: Get workspace
        env:
          tff_workspacet: ${{ steps.workspace.outputs.tff_workspacet }}
        run: |
          env
          echo "The selected workspace is $tff_workspacet"
